// .devcontainer/devcontainer.json
{
  "name": "Fluent Plugin Datadog Dev", // A friendly name
  // Specify the path to the custom Dockerfile
  "build": {
    "dockerfile": "Dockerfile"
  },
  // Use the non-root user created in the Dockerfile
  "remoteUser": "vscode",
  // Set the workspace folder inside the container
  "workspaceFolder": "/workspaces/fluent-plugin-datadog",
  // Command to run after the container is created and the workspace is mounted.
  // This installs the gem dependencies using Bundler.
  "postCreateCommand": "bundle install && sh -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"",
  // Forward ports that might be useful (e.g., for testing Fluentd)
  // Fluentd's default forward port is 24224. The repo's docker-compose also uses this.
  "forwardPorts": [
    24224
  ],
  // Configuration specific to VS Code
  "customizations": {
    "vscode": {
      "settings": {
        // Optional: Configure Ruby environment settings if needed
        "ruby.useBundler": true,
        "ruby.lint": {
          "rubocop": true
        },
        "ruby.format": "rubocop",
        // Add other Ruby or general settings here
        // Configure VS Code's integrated terminal to use Zsh
        "terminal.integrated.defaultProfile.linux": "zsh (2)",
        "terminal.integrated.profiles.linux": {
          "zsh (2)": {
            "path": "zsh"
          }
        }
      },
      // Specify VS Code extensions to install automatically
      "extensions": [
        "rebornix.ruby", // Official Ruby extension
        "bungcip.better-toml", // For TOML config files
        "kaiinui.vscode-ruby-test-explorer", // If you want a test explorer UI
        "dbaeumer.vscode-eslint", // If there are JS parts or linting
        "redhat.vscode-yaml", // For YAML files (like the docker-compose)
        "ms-azuretools.vscode-docker" // Useful for working with Docker inside VS Code
        // Add any other extensions relevant to your workflow
      ]
    }
  }
  // Uncomment to connect as root instead of the remoteUser.
  // "remoteUser": "root"
}